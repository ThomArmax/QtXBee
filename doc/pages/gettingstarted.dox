/*!
 * @page GETTING_STARTED Getting started with QtXBee SDK
 *
 * @section GETTING_STARTED_XBEE_CONNECTION XBee connection
 * @code{.cpp}
 * using namespace QtXBee;
 *
 * XBee::XBee xb("/dev/ttyUSB0");
 * xb.setMode(XBee::API1Mode);
 * @endcode
 *
 * @section GETTING_STARTED_AT_COMMAND_SYNC Synchronous AT Command
 * This part discribes the way to send synchronous AT Commands to the XBee module.
 * @code{.cpp}
 * using namespace QtXBee;
 *
 * XBee xb;
 * // Set XBee serial port configuration
 * // and open serial port here
 *
 * ATCommand panId;
 * ATCommandResponse * rep;
 * panId.setCommand(ATCommand::Command_ID);
 * rep = xb.sendATCommandSync(&panId);
 *
 * if(!rep) {
 *     // Handle error here
 * }
 * else if(rep->commandStatus() != ATCommandResponse::Ok) {
 *     qWarning() << "AT Command Failed with status" << XBeeResponse::statusToString(rep->commandStatus());
 * }
 * else {
 *     qdebug() << "PAN ID =" << rep->data();
 * }
 *
 * if(rep) {
 *     delete rep;    // Frees allocated resources
 * }
 * @endcode
 *
 * @section GETTING_STARTED_AT_COMMAND_ASYNC Asynchronous AT Command
 * This part discribes the way to send asynchronous AT Commands to the XBee module.
 * @code{.cpp}
 * //main.c
 * @endcode
 *
 * @code{.cpp}
 * //myclass.h
 * @endcode
 *
 * @code{.cpp}
 * //myclass.cpp
 * @endcode
 */
